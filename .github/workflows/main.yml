name: Network Info

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  aws_default_region: ${{ secrets.AWS_DEFAULT_REGION }}
  aws_bucket: ${{ secrets.AWS_BUCKET }}
  aws_cf_id: ${{ secrets.AWS_CF_ID }}
  aws-region: "ap-northeast-2"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - run:
          pip install -r requirements.txt
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run main.py
        run: |
          python main.py

      - name: Add & Commit
        uses: EndBug/add-and-commit@v4.4.0
        with:
          message: 'Update the Network Configuration'
          ref: 'gh-pages'
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

#       - name: Push changes
#         uses: ad-m/github-push-action@master
#         with:
#           github_token: ${{ secrets.REPO_TOKEN }}
#           branch: ${{ github.ref }}
      
      - name: Install AWS CLI
        run: pip3 install awscli --upgrade --user
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-northeast-2"
          mask-aws-account-id: true

#       - name: Deploy to S3
#         env:
#           AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
#           AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#         run: |
#           aws s3 sync ./icon2 ${{secrets.AWS_BUCKET}}
#       - name: Invalidate CloudFront Cache
#         run: aws cloudfront create-invalidation --distribution-id ${{secrets.AWS_CF_ID}} --paths "/*"
